var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Pipe } from '@angular/core';
import { FilterPipe } from './filter.pipe';
export var PureFilterPipe = (function (_super) {
    __extends(PureFilterPipe, _super);
    function PureFilterPipe() {
        _super.apply(this, arguments);
    }
    PureFilterPipe.prototype.transform = function (input, filter, field) {
        return _super.prototype.transform.call(this, input, filter, field);
    };
    PureFilterPipe.decorators = [
        { type: Pipe, args: [{ name: 'pureFilter' },] },
    ];
    /** @nocollapse */
    PureFilterPipe.ctorParameters = function () { return []; };
    return PureFilterPipe;
}(FilterPipe));
